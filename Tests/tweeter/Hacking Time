import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    static String decrypt(String encrypted_message) {
        char[] a = encrypted_message.toCharArray();     
        int[] k = {8, 2, 5, 1, 2, 2, 0};                // the key is : 8251220
        int j = 0;
        for(int i = 0; i < a.length; i++){
            if(Character.isLetter(a[i])){               // find every letter a-z, A-Z
                a[i] = rotate(a[i], k[j%7]);            // rotate backward to the original letter
                j++;                                    
            }
        }
        return String.valueOf(a);       
    }
    
    static char rotate(char c, int k){
    	if(Character.isLowerCase(c)){
    		c = (char)((c - 'a' - k + 26) % 26 + 'a');
    	}else{
    		c = (char)((c - 'A' - k + 26) % 26 + 'A');
    	}
    	return c;
    }
    
    public static void main(String[] args) throws IOException{
        Scanner in = new Scanner(System.in);
        final String fileName = System.getenv("OUTPUT_PATH");
        BufferedWriter bw = new BufferedWriter(new FileWriter(fileName));
        String res;
        String _encrypted_message;
        try {
            _encrypted_message = in.nextLine();
        } catch (Exception e) {
            _encrypted_message = null;
        }
        
        res = decrypt(_encrypted_message);
        bw.write(res);
        bw.newLine();
        
        bw.close();
    }

}
